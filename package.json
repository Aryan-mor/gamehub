{
  "name": "gamehub",
  "version": "0.1.0",
  "private": true,
  "main": "dist/bot.js",
  "scripts": {
    "verify": "pnpm run routes:gen && pnpm run type-check && pnpm run lint && pnpm run test:run",
    "type-check:ci": "tsc --noEmit -p tsconfig.ci.json",
    "dev": "./scripts/dev.sh",
    "routes:gen": "tsx scripts/generate-routes.ts",
    "build": "pnpm run routes:gen && tsc",
    "scaffold:action": "tsx scripts/scaffold-action.ts",
    "start": "node dist/bot.js",
    "lint": "eslint .",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:ci": "vitest run --reporter=verbose",
    "build:and:test-autodiscovery": "pnpm build && node -e \"require('./dist/modules/core/smart-router.js'); require('./dist/main-router.js'); (async()=>{const { dispatch } = require('./dist/modules/core/smart-router.js'); const { initializeRoutes } = require('./dist/main-router.js'); const logger = require('./dist/modules/core/logger.js').default; initializeRoutes(); const ctx={ t:(k)=>k, replySmart: async()=>{}, keyboard:{ buildCallbackData: ()=> 'noop' }, log: logger}; const context={ ctx, user:{ id:'123', username:'test'} }; await dispatch('games.poker.room.list', context); console.log('OK') })().catch((e)=>{ console.error(e); process.exit(1); })\"",
    "pre-push:full": "./scripts/pre-push.sh",
    "pre-push:coverage": "./scripts/pre-push.sh --coverage",
    "bot": "tsx src/bot.ts",
    "bot:stop": "pkill -f 'pnpm bot' || pkill -f 'tsx src/bot.ts' || echo 'No bot processes found'",
    "bot:restart": "pnpm run bot:stop && sleep 2 && pnpm run bot",
    "bot:manage": "tsx src/scripts/botManager.ts",
    "bot:control": "./scripts/bot-control.sh",
    "export:bot-config": "ts-node src/scripts/exportBotConfig.ts",
    "set:bot-commands": "ts-node src/scripts/setBotCommands.ts",
    "type-check": "tsc --noEmit",
    "test:supabase": "tsx scripts/test-supabase-connection.ts",
    "i18n:sync": "npx i18next-parser && pnpm run i18n:cleanup",
    "i18n:cleanup": "tsx scripts/cleanup-i18n-files.ts",
    "i18n:check-duplicates": "tsx scripts/check-i18n-duplicates.ts",
    "i18n:manage": "tsx scripts/i18n-manager.ts",
    "i18n:flatten": "tsx scripts/flatten-translations.ts flatten",
    "i18n:validate": "tsx scripts/flatten-translations.ts validate",
    "i18n:convert": "tsx scripts/flatten-translations.ts all",
    "i18n:test": "tsx scripts/test-flat-translations.ts",
    "db:clean": "tsx src/scripts/cleanSupabase.ts --yes",
    "db:clean:skip-auth": "tsx src/scripts/cleanSupabase.ts --yes --skip-auth"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.39.0",
    "dotenv": "^16.4.5",
    "grammy": "^1.37.0",
    "i18next": "^25.3.2",
    "i18next-fs-backend": "^2.6.0",
    "nanoid": "^5.1.5",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "zod": "^4.0.15"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/node": "^20",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint": "^9",
    "form-data": "^4.0.4",
    "i18next-parser": "^9.3.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  },
  "overrides": {
    "tough-cookie": "^4.1.3",
    "request": "^2.88.2",
    "form-data": "^4.0.4"
  },
  "engines": {
    "node": ">=18 <24",
    "pnpm": ">=9"
  }
}
